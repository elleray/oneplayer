package xy.media.oneplayer.data.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import xy.media.oneplayer.data.greendao.VideoPosition;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "VIDEO_POSITION".
*/
public class VideoPositionDao extends AbstractDao<VideoPosition, String> {

    public static final String TABLENAME = "VIDEO_POSITION";

    /**
     * Properties of entity VideoPosition.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Path = new Property(0, String.class, "path", true, "PATH");
        public final static Property Position = new Property(1, Integer.class, "position", false, "POSITION");
        public final static Property Tag = new Property(2, String.class, "tag", false, "TAG");
        public final static Property Group_id = new Property(3, Long.class, "group_id", false, "GROUP_ID");
    };


    public VideoPositionDao(DaoConfig config) {
        super(config);
    }
    
    public VideoPositionDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"VIDEO_POSITION\" (" + //
                "\"PATH\" TEXT PRIMARY KEY NOT NULL ," + // 0: path
                "\"POSITION\" INTEGER," + // 1: position
                "\"TAG\" TEXT," + // 2: tag
                "\"GROUP_ID\" INTEGER);"); // 3: group_id
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"VIDEO_POSITION\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, VideoPosition entity) {
        stmt.clearBindings();
 
        String path = entity.getPath();
        if (path != null) {
            stmt.bindString(1, path);
        }
 
        Integer position = entity.getPosition();
        if (position != null) {
            stmt.bindLong(2, position);
        }
 
        String tag = entity.getTag();
        if (tag != null) {
            stmt.bindString(3, tag);
        }
 
        Long group_id = entity.getGroup_id();
        if (group_id != null) {
            stmt.bindLong(4, group_id);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public VideoPosition readEntity(Cursor cursor, int offset) {
        VideoPosition entity = new VideoPosition( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // path
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // position
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // tag
            cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3) // group_id
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, VideoPosition entity, int offset) {
        entity.setPath(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPosition(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setTag(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGroup_id(cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(VideoPosition entity, long rowId) {
        return entity.getPath();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(VideoPosition entity) {
        if(entity != null) {
            return entity.getPath();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
